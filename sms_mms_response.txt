{"type": "bot", "content": "I got your issue. Let me start analyzing the data to identify the root cause", "timestamp": "2025-09-03T21:28:33.324535", "metadata": {}}
{"type": "progress", "step": "workflow", "status": "started", "details": {"input_received": true}, "timestamp": "2025-09-03T21:28:33.324643"}
{"type": "emit_step_title", "role": "bot", "step_number": 1, "title": "Anomaly Identification"}
{"type": "bot", "content": "On July 1st, 2025, the `zero_usage` value in the `rev_sum_fact_bl_adg` table was unexpectedly high. The actual value of 800 fell outside the expected range of 200 +/- 3 standard deviations.\n", "timestamp": "2025-09-03T21:28:36.632038", "metadata": {}}
{"type": "emit_step_title", "role": "bot", "step_number": 2, "title": "Analysis Decision"}
{"type": "progress", "step": "analysis_decision", "status": "started", "details": {"step": "Determining analysis approach"}, "timestamp": "2025-09-03T21:28:36.634271"}
{"type": "bot", "content": "Based on provided inputs, multiple columns are involved in this validation metric, we'll run a statistical check at the L0 layer to pinpoint the problematic column.", "timestamp": "2025-09-03T21:28:39.641878", "metadata": {}}
{"type": "progress", "step": "analysis_decision", "status": "completed", "details": {"path": "Statistical"}, "timestamp": "2025-09-03T21:28:39.643080"}
{"type": "progress", "step": "parse_dq_query", "status": "started", "details": {"step": "Parsing DQ validation query"}, "timestamp": "2025-09-03T21:28:39.643754"}
{"type": "bot", "content": "Based on your inputs, here are the tables, columns, filters, group by, and aggregation functions found.", "timestamp": "2025-09-03T21:28:43.497067", "metadata": {}}
{"type": "table_data", "title": "Parsed DQ Information", "data": {"target_tables": {"vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg": ["sms_cnt", "mms_cnt"]}, "filters": ["CAST(hdp_insert_dt_time AS DATE) = '2025-07-01'"], "group_by": ["insert_dt"], "aggregation_function": "SUM"}, "timestamp": "2025-09-03T21:28:43.498322"}
{"type": "progress", "step": "parse_dq_query", "status": "completed", "details": {}, "timestamp": "2025-09-03T21:28:43.498435"}
{"type": "progress", "step": "initialize_trace", "status": "started", "details": {"step": "Performing L0 layer analysis"}, "timestamp": "2025-09-03T21:28:43.498918"}
{"type": "bot", "content": "Identifying columns for root cause analysis and performing initial L0 checks...", "timestamp": "2025-09-03T21:28:43.498986", "metadata": {}}
{"type": "analysis_result", "layer": "L0", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg", "column": "sms_cnt", "sql_query": "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            sms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", "reasoning": "Value 800.00 is outside the 3-sigma range [200.00, 200.00].", "inference": "A significant deviation has been detected in the sms_cnt column's values over the past month. A lineage trace is necessary to uncover the root cause.", "timestamp": "2025-09-03T21:29:05.144285"}
{"type": "analysis_result", "layer": "L0", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg", "column": "mms_cnt", "sql_query": "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            mms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", "reasoning": "Value 800.00 is outside the 3-sigma range [200.00, 200.00].", "inference": "A significant deviation has been detected in the mms_cnt column's values over the past month. A lineage trace is necessary to uncover the root cause.", "timestamp": "2025-09-03T21:29:25.672754"}
{"type": "progress", "step": "initialize_trace", "status": "completed", "details": {"paths_found": 2}, "timestamp": "2025-09-03T21:29:25.672952"}
{"type": "emit_step_title", "role": "bot", "step_number": 3, "title": "Tracing Backward"}
state {'failed_column': 'zero_usage', 'failed_table': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'analysis_method': 'Statistical', 'validation_query': "select insert_dt,sum(zero_usage_cycle) as zero_usage from (select CAST(hdp_insert_dt_time AS DATE) as insert_dt, case when sms_cnt < 10 and mms_cnt < 10 then 1 else 0 end as zero_usage_cycle from vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg where CAST(hdp_insert_dt_time AS DATE) = '2025-07-01') group by 1", 'expected_value': 200, 'expected_std_dev': 20, 'actual_value': 800, 'sd_threshold': 3, 'parsed_dq_info': {'target_tables': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg': ['sms_cnt', 'mms_cnt']}, 'filters': ["CAST(hdp_insert_dt_time AS DATE) = '2025-07-01'"], 'group_by': ['insert_dt'], 'aggregation_function': 'SUM'}, 'trace_data': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg': {'sms_cnt': [{'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'sms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            sms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}], 'mms_cnt': [{'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'mms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            mms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}]}}, 'paths_to_process': [(0, 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'sms_cnt', 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt'), (0, 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'mms_cnt', 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt')], 'mismatched_nodes': [{'from_node': 'External Alert', 'to_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt', 'details': {'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'sms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            sms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}}, {'from_node': 'External Alert', 'to_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt', 'details': {'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'mms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            mms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}}], 'anamoly_node_response': 'On July 1st, 2025, the `zero_usage` value in the `rev_sum_fact_bl_adg` table was unexpectedly high. The actual value of 800 fell outside the expected range of 200 +/- 3 standard deviations.\n', 'loaded_lineage_graphs': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt': <networkx.classes.digraph.DiGraph object at 0x0000024A0656A510>, 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt': <networkx.classes.digraph.DiGraph object at 0x0000024A06580190>}}
{"type": "bot", "content": "Checking for upstream dependencies based on data lineage ...", "timestamp": "2025-09-03T21:29:25.674990", "metadata": {}}
Nodes added: [{'id': 'rev_sum_fact_bl_adg', 'label': 'rev_sum_fact_bl_adg', 'type': 'table'}, {'id': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt', 'label': 'sms_cnt', 'type': 'column', 'parent': 'rev_sum_fact_bl_adg'}, {'id': 'cycle_usage_adg', 'label': 'cycle_usage_adg', 'type': 'table'}, {'id': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt', 'label': 'usg_call_cnt', 'type': 'column', 'parent': 'cycle_usage_adg'}]
Edges added: [{'source': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt', 'target': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt'}]
{"type": "lineage_graph", "data": {"nodes": [{"id": "rev_sum_fact_bl_adg", "label": "rev_sum_fact_bl_adg", "type": "table"}, {"id": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt", "label": "sms_cnt", "type": "column", "parent": "rev_sum_fact_bl_adg"}, {"id": "cycle_usage_adg", "label": "cycle_usage_adg", "type": "table"}, {"id": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt", "label": "usg_call_cnt", "type": "column", "parent": "cycle_usage_adg"}], "edges": [{"source": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt", "target": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt"}]}, "timestamp": "2025-09-03T21:29:25.675397"}     
{"type": "node_status_update", "data": {"nodeId": "cycle_usage_adg", "status": "checking"}, "timestamp": "2025-09-03T21:29:25.675682"}
{"type": "node_status_update", "data": {"nodeId": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt", "status": "checking"}, "timestamp": "2025-09-03T21:29:25.675781"}
{"type": "bot", "content": "Checking for USG_CALL_CNT Count ...", "timestamp": "2025-09-03T21:29:25.675896", "metadata": {}}
{"type": "step_result", "data": {"step_number": 3, "step_type": "lineage_check", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg", "column": "usg_call_cnt", "sql_query": "", "result": "Identified the usg_call_cnt column originated from usg_call_cnt column from cycle_usage_adg table.", "status": "success"}, "timestamp": "2025-09-03T21:29:25.675983"}
{"type": "bot", "content": "I'm running the count checks for the previous date ...", "timestamp": "2025-09-03T21:29:25.676187", "metadata": {}}
{"type": "node_status_update", "data": {"nodeId": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt", "status": "match"}, "timestamp": "2025-09-03T21:29:50.333027"}
{"type": "node_status_update", "data": {"nodeId": "cycle_usage_adg", "status": "match"}, "timestamp": "2025-09-03T21:29:50.333272"}
{"type": "step_result", "data": {"step_number": 3, "step_type": "count_check_result", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg", "column": "usg_call_cnt", "sql_query": "", "result": "Data consistent at cycle_usage_adg.usg_call_cnt - no issues found.", "status": "success"}, "timestamp": "2025-09-03T21:29:50.333351"}
{"type": "node_status_update", "data": {"nodeId": "cycle_usage_adg", "status": "checking"}, "timestamp": "2025-09-03T21:29:50.333524"}
{"type": "node_status_update", "data": {"nodeId": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt", "status": "checking"}, "timestamp": "2025-09-03T21:29:50.333675"}
{"type": "bot", "content": "Checking for USG_CALL_CNT Count ...", "timestamp": "2025-09-03T21:29:50.333816", "metadata": {}}
{"type": "step_result", "data": {"step_number": 3, "step_type": "lineage_check", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg", "column": "usg_call_cnt", "sql_query": "", "result": "Identified the usg_call_cnt column originated from usg_call_cnt column from cycle_usage_adg table.", "status": "success"}, "timestamp": "2025-09-03T21:29:50.333895"}
{"type": "bot", "content": "I'm running the count checks for the previous date ...", "timestamp": "2025-09-03T21:29:50.334037", "metadata": {}}
{"type": "node_status_update", "data": {"nodeId": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt", "status": "mismatch"}, "timestamp": "2025-09-03T21:30:13.367105"}
{"type": "node_status_update", "data": {"nodeId": "cycle_usage_adg", "status": "mismatch"}, "timestamp": "2025-09-03T21:30:13.367322"}
{"type": "step_result", "data": {"step_number": 3, "step_type": "count_check_result", "table": "vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg", "column": "usg_call_cnt", "sql_query": "", "result": "Results from count checks for the previous date: The deviation in usg_call_cnt < 10 originates from the usg_call_cnt column in the 'cycle_usage_adg' table, indicating an issue at this earlier stage.", "status": "warning"}, "timestamp": "2025-09-03T21:30:13.367404"}
{"type": "emit_step_title", "role": "bot", "step_number": 3, "title": "Tracing Backward"}
state {'failed_column': 'zero_usage', 'failed_table': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'analysis_method': 'Statistical', 'validation_query': "select insert_dt,sum(zero_usage_cycle) as zero_usage from (select CAST(hdp_insert_dt_time AS DATE) as insert_dt, case when sms_cnt < 10 and mms_cnt < 10 then 1 else 0 end as zero_usage_cycle from vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg where CAST(hdp_insert_dt_time AS DATE) = '2025-07-01') group by 1", 'expected_value': 200, 'expected_std_dev': 20, 'actual_value': 800, 'sd_threshold': 3, 'parsed_dq_info': {'target_tables': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg': ['sms_cnt', 'mms_cnt']}, 'filters': ["CAST(hdp_insert_dt_time AS DATE) = '2025-07-01'"], 'group_by': ['insert_dt'], 'aggregation_function': 'SUM'}, 'trace_data': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg': {'sms_cnt': [{'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'sms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            sms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}, {'step_num': 1, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg', 'column_name': 'usg_call_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(mt.CYCLE_DT AS DATE) AS insert_dt,\n            (\n                SELECT\n                    SUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'SMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0 END), 0))\n                FROM\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg` AS mt_inner\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n                ON\n                    CAST(A.CYCLE_DT AS DATE) = mt_inner.CYCLE_DT\n           
         AND A.CUST_LINE_SEQ_ID = mt_inner.CUST_LINE_SEQ_ID\n                    AND A.cust_id = mt_inner.cust_id\n                    AND A.sor_id = mt_inner.sor_id\n                  
  AND mt_inner.acct_num = A.acct_num\n                    AND mt_inner.mtn = A.mtn\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n                ON\n                    A.SOR_ID = C.SOR_ID\n                    AND A.USG_TYPE_ID = C.USG_TYPE_ID\n                    AND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n                ON\n                    A.SOR_ID = M.SOR_ID\n                    AND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n                    AND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n                WHERE\n                    mt_inner.cycle_dt = mt.cycle_dt\n                    AND mt_inner.mtn = mt.mtn\n                    AND mt_inner.SOR_ID = mt.SOR_ID\n                    AND mt_inner.CUST_ID = mt.CUST_ID\n                    AND mt_inner.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n                GROUP BY\n                    mt_inner.SOR_ID,\n                    mt_inner.CUST_ID,\n                    mt_inner.mtn,\n                    mt_inner.CUST_LINE_SEQ_ID,\n                    mt_inner.CYCLE_DT,\n                
    COALESCE(M.VZ_MKT_CD, 'HQ')\n            ) AS sms_cnt\n        FROM\n            (SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n        WHERE CAST(mt.CYCLE_DT AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': "sms_cnt  = (\n\tSELECT\n\t\tSUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'SMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0\n\t\t\tEND),\n\t\t\t0\n\t\t)) AS SMS_CNT,\n\t\tmt.mtn,\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ') AS VZ_MKT_CD,\n\t\tmt.CYCLE_DT\n\tFROM\n\t\t(SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n\tON\n\t\tCAST(A.CYCLE_DT AS DATE) = mt.CYCLE_DT\n\t\tAND A.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n\t\tAND A.cust_id = mt.cust_id\n\t\tAND A.sor_id = mt.sor_id\n\t\tAND mt.acct_num = A.acct_num\n\t\tAND mt.mtn = A.mtn\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n\tON\n\t\tA.SOR_ID = C.SOR_ID\n\t\tAND A.USG_TYPE_ID = C.USG_TYPE_ID\n\t\tAND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n\tON\n\t\tA.SOR_ID = M.SOR_ID\n\t\tAND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n\t\tAND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n\tWHERE\n\t\tmt.cycle_dt = FILTER DATE\n\t\t\t\tGROUP BY\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.mtn,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tmt.CYCLE_DT,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ')\n \n)", 'check_type': 'statistical_trend_check', 'actual_value': 1000.0, 'historical_expected_value': 1000.0, 'historical_std_dev': 0.0, 'is_mismatch': False, 'mismatch_reason': 'Value is within its historical statistical range.'}], 'mms_cnt': [{'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'mms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            mms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}, {'step_num': 1, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg', 'column_name': 'usg_call_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(mt.CYCLE_DT AS DATE) AS insert_dt,\n            (\n                SELECT\n                    SUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'MMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0 END), 0))\n                FROM\n                    (SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt_inner\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n         
       ON\n                    CAST(A.CYCLE_DT AS DATE) = mt_inner.CYCLE_DT\n                    AND A.CUST_LINE_SEQ_ID = mt_inner.CUST_LINE_SEQ_ID\n                    AND A.cust_id = mt_inner.cust_id\n                    AND A.sor_id = mt_inner.sor_id\n                    AND mt_inner.acct_num = A.acct_num\n                    AND mt_inner.mtn = A.mtn\n             
   LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n                ON\n                    A.SOR_ID = C.SOR_ID\n                    AND A.USG_TYPE_ID = C.USG_TYPE_ID\n                    AND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n                ON\n                    A.SOR_ID = M.SOR_ID\n                    AND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n            
        AND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n                WHERE\n                    mt_inner.mtn = mt.mtn\n                    AND mt_inner.SOR_ID = mt.SOR_ID\n                    AND mt_inner.CUST_ID = mt.CUST_ID\n                    AND mt_inner.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n                    AND mt_inner.CYCLE_DT = mt.CYCLE_DT\n                GROUP BY\n                    mt_inner.SOR_ID,\n                    mt_inner.CUST_ID,\n                    mt_inner.mtn,\n                
    mt_inner.CUST_LINE_SEQ_ID,\n                    mt_inner.CYCLE_DT,\n                    COALESCE(M.VZ_MKT_CD, 'HQ')\n            ) AS mms_cnt\n        FROM\n            (SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n        WHERE\n            CAST(mt.CYCLE_DT AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': "mms_cnt = (\n\tSELECT\n\t\tSUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'MMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0\n\t\t\tEND),\n\t\t\t0\n\t\t)) AS MMS_CNT,\n\t\tmt.mtn,\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ') AS VZ_MKT_CD,\n\t\tmt.CYCLE_DT\n\tFROM\n\t\t(SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n\tON\n\t\tCAST(A.CYCLE_DT AS DATE) = mt.CYCLE_DT\n\t\tAND A.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n\t\tAND A.cust_id = mt.cust_id\n\t\tAND A.sor_id = mt.sor_id\n\t\tAND mt.acct_num = A.acct_num\n\t\tAND mt.mtn = A.mtn\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n\tON\n\t\tA.SOR_ID = C.SOR_ID\n\t\tAND A.USG_TYPE_ID = C.USG_TYPE_ID\n\t\tAND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n\tON\n\t\tA.SOR_ID = M.SOR_ID\n\t\tAND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n\t\tAND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n\tWHERE\n\t\tmt.cycle_dt = FILTER DATE\n\t\t\t\tGROUP BY\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.mtn,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tmt.CYCLE_DT,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ')\n \n)", 'check_type': 'statistical_trend_check', 'actual_value': 1000.0, 'historical_expected_value': 0.0, 'historical_std_dev': 0.0, 'is_mismatch': True, 'mismatch_reason': 'Upstream value 1000.00 is outside its historical 3-sigma range [0.00, 0.00].'}]}}, 'paths_to_process': [(1, 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg', 'usg_call_cnt', 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt')], 'mismatched_nodes': [{'from_node': 'External Alert', 'to_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt', 'details': {'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'sms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN sms_cnt < 10 THEN 1 ELSE 0 END) AS sms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            sms_cnt\n        FROM\n            `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}}, {'from_node': 'External Alert', 'to_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt', 'details': {'step_num': 0, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg', 'column_name': 'mms_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(last_cycle_dt AS DATE) AS insert_dt,\n            mms_cnt\n        FROM\n           
 `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg`\n        WHERE\n            CAST(last_cycle_dt AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': 'Initial Anomaly', 'check_type': 'statistical_trend_check', 'actual_value': 800.0, 'historical_expected_value': 200.0, 'historical_std_dev': 0.0, 'lower_bound': 200.0, 'upper_bound': 200.0, 'is_mismatch': True, 'mismatch_reason': 'Value 800.00 is outside the 3-sigma range [200.00, 200.00].'}}, {'l0_key': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt', 'from_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt', 'to_node': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg.usg_call_cnt', 'details': {'step_num': 1, 'table_name': 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg', 'column_name': 'usg_call_cnt', 'sql_query': "SELECT\n    insert_dt,\n    SUM(CASE WHEN mms_cnt < 10 THEN 1 ELSE 0 END) AS mms_cnt\nFROM\n    (\n        SELECT\n            CAST(mt.CYCLE_DT AS DATE) AS insert_dt,\n            (\n                SELECT\n                    SUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'MMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0 END), 0))\n                FROM\n                    (SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt_inner\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n                ON\n                    CAST(A.CYCLE_DT AS DATE) = mt_inner.CYCLE_DT\n                    AND A.CUST_LINE_SEQ_ID = mt_inner.CUST_LINE_SEQ_ID\n                    AND A.cust_id = mt_inner.cust_id\n                    AND A.sor_id = mt_inner.sor_id\n                    AND mt_inner.acct_num = A.acct_num\n                    AND mt_inner.mtn = A.mtn\n                LEFT JOIN\n                    `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n                ON\n                    A.SOR_ID = C.SOR_ID\n                    AND A.USG_TYPE_ID = C.USG_TYPE_ID\n                    AND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n                LEFT JOIN\n                  
  `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n                ON\n                    A.SOR_ID = M.SOR_ID\n                    AND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n                    AND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n                WHERE\n                    mt_inner.mtn = mt.mtn\n                    AND mt_inner.SOR_ID = mt.SOR_ID\n                    AND mt_inner.CUST_ID = mt.CUST_ID\n                    AND mt_inner.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n                    AND mt_inner.CYCLE_DT = mt.CYCLE_DT\n                GROUP BY\n                    mt_inner.SOR_ID,\n                    mt_inner.CUST_ID,\n                    mt_inner.mtn,\n                    mt_inner.CUST_LINE_SEQ_ID,\n                    mt_inner.CYCLE_DT,\n                    COALESCE(M.VZ_MKT_CD, 'HQ')\n            ) AS mms_cnt\n        FROM\n            (SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n        WHERE\n            CAST(mt.CYCLE_DT AS DATE) = '2025-07-01'\n    )\nGROUP BY\n    insert_dt", 'transformation_from_prev': "mms_cnt = (\n\tSELECT\n\t\tSUM(COALESCE((CASE WHEN C.FEAT_CTGRY_CD = 'MMS' THEN CAST(A.USG_CALL_CNT AS BIGNUMERIC) ELSE 0\n\t\t\tEND),\n\t\t\t0\n\t\t)) AS MMS_CNT,\n\t\tmt.mtn,\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ') AS VZ_MKT_CD,\n\t\tmt.CYCLE_DT\n\tFROM\n\t\t(SELECT DISTINCT * FROM `vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.mtn_bill_metrics_adg`) AS mt\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.cycle_usage_adg` AS A\n\tON\n\t\tCAST(A.CYCLE_DT AS DATE) = mt.CYCLE_DT\n\t\tAND A.CUST_LINE_SEQ_ID = mt.CUST_LINE_SEQ_ID\n\t\tAND A.cust_id = mt.cust_id\n\t\tAND A.sor_id = mt.sor_id\n\t\tAND mt.acct_num = A.acct_num\n\t\tAND mt.mtn = A.mtn\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.usage_type_adg` AS C\n\tON\n\t\tA.SOR_ID = C.SOR_ID\n\t\tAND A.USG_TYPE_ID = C.USG_TYPE_ID\n\t\tAND C.feat_ctgry_cd IN ('SMS', 'MMS', 'VCE', 'VM', 'PTT')\n\tLEFT JOIN\n\t\t`vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.market_hist_adg` AS M\n\tON\n\t\tA.SOR_ID = M.SOR_ID\n\t\tAND TRIM(UPPER(A.MKT_CD)) = TRIM(UPPER(M.MKT_CD))\n\t\tAND CAST(A.CYCLE_DT AS DATE) BETWEEN M.EFF_DT AND COALESCE(M.EXP_DT, DATE '1991-12-31')\n\tWHERE\n\t\tmt.cycle_dt = FILTER DATE\n\t\t\t\tGROUP BY\n\t\tmt.SOR_ID,\n\t\tmt.CUST_ID,\n\t\tmt.mtn,\n\t\tmt.CUST_LINE_SEQ_ID,\n\t\tmt.CYCLE_DT,\n\t\tCOALESCE(M.VZ_MKT_CD, 'HQ')\n \n)", 'check_type': 'statistical_trend_check', 'actual_value': 1000.0, 'historical_expected_value': 0.0, 'historical_std_dev': 0.0, 'is_mismatch': True, 'mismatch_reason': 'Upstream value 1000.00 is outside its historical 3-sigma range [0.00, 0.00].'}}], 'anamoly_node_response': 'On July 1st, 2025, the `zero_usage` value in the `rev_sum_fact_bl_adg` table was unexpectedly high. The actual value of 800 fell outside the expected range of 200 +/- 3 standard deviations.\n', 'loaded_lineage_graphs': {'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.sms_cnt': <networkx.classes.digraph.DiGraph object at 0x0000024A0656A510>, 'vz-it-np-gk1v-dev-cwlspr-0.vzw_uda_prd_tbls.rev_sum_fact_bl_adg.mms_cnt': <networkx.classes.digraph.DiGraph object at 0x0000024A06580190>}}
Error in main execution: invalid literal for int() with base 10: ''